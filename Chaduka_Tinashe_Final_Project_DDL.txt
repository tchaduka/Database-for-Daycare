REM ******************************************************************
REM File: CreateDaycare.sql
REM Description: Used for creating the objects and loading data
REM into the Daycare  schema
REM Created: April 03, 2019
REM Modified: April 03, 2019 AR
REM Modified April 03, 2019 AR
REM Version: 3.0
REM ******************************************************************

PROMPT Creating Table '	EMPLOYEE'
CREATE TABLE EMPLOYEE
(EMPLOYEE_ID NUMBER(8,0) 
,GENDER VARCHAR2(6)
,FIRST_NAME VARCHAR2(50)
,LAST_NAME VARCHAR2(50)
,ADDRESS VARCHAR2(50) 
,DATE_WORKED DATE  
,BIRTH_DATE DATE 
)
/

COMMENT ON TABLE EMPLOYEE IS 'Profile information for an employee.'
/

COMMENT ON COLUMN EMPLOYEE.EMPLOYEE_ID IS 'The unique ID for an employee.'
/

COMMENT ON COLUMN EMPLOYEE.GENDER IS 'This employee''s gender (Female, Male, etc.)'
/

COMMENT ON COLUMN EMPLOYEE.FIRST_NAME IS 'This employee''s first name.'
/

COMMENT ON COLUMN EMPLOYEE.LAST_NAME IS 'This employee''s last name'
/

COMMENT ON COLUMN EMPLOYEE.ADDRESS IS 'This employee''s street address.'
/

COMMENT ON COLUMN EMPLOYEE.DATE_WORKED IS 'Audit column - indicates date worked.'
/

COMMENT ON COLUMN EMPLOYEE.BIRTH_DATE IS 'Audit column - date of birth.'
/

PROMPT Creating Table 'CHILD'
CREATE TABLE CHILD
(CHILD_ID NUMBER(8,0)  
,FIRST_NAME VARCHAR2(50) 
,LAST_NAME VARCHAR2(50) 
,ADDRESS VARCHAR2(50)  
,GENDER VARCHAR2(6)
)
/
COMMENT ON TABLE CHILD IS 'Profile information for a daycare child.'
/

COMMENT ON COLUMN CHILD.CHILD_ID IS 'The unique ID for a daycare.'
/

COMMENT ON COLUMN CHILD.FIRST_NAME IS 'This is daycare child''s first name.'
/

COMMENT ON COLUMN CHILD.LAST_NAME IS 'This is daycare child''s last name.'
/

COMMENT ON COLUMN CHILD.ADDRESS IS 'This is daycare child''s  street address.'
/

COMMENT ON COLUMN CHILD.GENDER IS 'This is child''s gender (Female, Male, etc.)'
/

PROMPT Creating Table 'ENROLLMENT'
CREATE TABLE ENROLLMENT 
(ENROLLMENT_ID NUMBER(4,0)
,CHILD_ID NUMBER(8,0) 
,ACTIVITY_ID NUMBER(2,0)) 
,DATE_ENROLLED DATE 
,TERM VARCHAR2(6)
)
/
COMMENT ON TABLE ENROLLMENT IS 'Information for a daycare child registered at the daycare.'
/

COMMENT ON COLUMN ENROLLMENT.ENROLLMENT_ID IS 'The unique ID for an enrollment.'
/

COMMENT ON COLUMN ENROLLMENT.CHILD_ID IS 'The unique ID for a daycare child.'
/

COMMENT ON COLUMN ENROLLMENT.ACTIVITY_ID IS 'The unique ID for a daycare activity.'
/

COMMENT ON COLUMN ENROLLMENT.DATE_ENROLLED IS 'The date a daycare child is enrolled.'
/

COMMENT ON COLUMN ENROLLMENT.TERM IS 'The term in which a daycare child is enrolled.'
/

PROMPT Creating Table 'TUITION'
CREATE TABLE TUITION 
(TUITION_ID NUMBER(6,0) 
,PARENT_ID NUMBER(4,0) 
,TOTAL_BILL DECIMAL(8,0) 
,BILLING_DATE DATE 
,PAYMENT_METHOD VARCHAR2(15)
)
/

COMMENT ON TABLE TUITION IS 'The total cost for daycare per child for specific term.'
/

COMMENT ON COLUMN TUITION.TUITION_ID IS 'The unique ID for tuition.).'
/

COMMENT ON COLUMN TUITION.PARENT_ID IS 'The unique ID for parent.'
/

COMMENT ON COLUMN TUTION.TOTAL_BILL IS 'The total amount billed to a parent.'
/

COMMENT ON COLUMN TUITION.BILLING_DATE IS 'The date tuition is billed to a parent.'
/

COMMENT ON COLUMN TUITION.PAYMRNT_METHOD IS 'The method of payment for the tuition.'
/

PROMPT Creating Table 'REPORT'
CREATE TABLE REPORT
(REPORT_ID NUMBER(6,0) 
,CHILD_ID NUMBER(8,0)  
,EMPLOYEE_ID NUMBER(8,0) 
,DATE_REPORTED DATE 
,VACCINATION VARCHAR2(30)
)
/

COMMENT ON TABLE REPORT IS 'Information on how a child is doing or child assessment.'
/

COMMENT ON COLUMN REPORT.REPORT_ID IS 'The unique report ID for a report.'
/

COMMENT ON COLUMN REPORT.CHILD_ID IS 'The unique ID for a daycare child.'
/

COMMENT ON COLUMN REPORT.EMPLOYEE_ID IS 'The unique ID for an employee.'
/

COMMENT ON COLUMN REPORT.DATE_REPORTED IS 'Is the date when the report was generated '
/

COMMENT ON COLUMN REPORT.VACCINATION IS 'child's vaccination record.'
/

PROMPT Creating Table 'MEAL'
CREATE TABLE MEAL
(MEAL_ID NUMBER(4,0) 
,MEAL_DATE DATE 
,MEAL_NAME VARCHAR2(5) 
,MEAL_TIME TIME
,FOOD_TYPE VARCHAR2(20)
)
/

COMMENT ON TABLE MEAL IS 'Information for a particular meal.'
/

COMMENT ON COLUMN MEAL.MEAL_ID IS 'The unique ID for a meal.'
/

COMMENT ON COLUMN MEAL.MEAL_DATE IS 'The date of the meal.'
/

COMMENT ON COLUMN MEAL.MEAL_NAME IS 'The name of a meal.'
/

COMMENT ON COLUMN MEAL.MEAL_TIME IS 'The time of a meal.'
/

COMMENT ON COLUMN MEAL.FOOD_TYPE IS 'The name of the food.'
/

PROMPT Creating Table 'ACTIVITY'
CREATE TABLE ACTIVITY
(ACTIVITY_ID NUMBER(8,0) 
,ACTIVITY_NAME VARCHAR2(50) 
,EMPLOYEE_ID NUMBER(8,0)
,ACTIVITY_DATE DATE 
,ACTIVITY_TIME TIME 
)
/

COMMENT ON TABLE ACTIVITY IS 'Information for a daycare activity.'
/

COMMENT ON COLUMN ACTIVITY.ACTIVITY_ID IS 'The unique ID for an activity.'
/

COMMENT ON COLUMN ACTIVITY.ACTIVITY_NAME IS 'The name for an activity.'
/

COMMENT ON COLUMN ACTIVITY.EMPLOYEE_ID IS 'The unique ID for an employee.'
/

COMMENT ON COLUMN ACTIVITY.ACTIVITY_DATE IS 'The date an activity is done.'
/

COMMENT ON COLUMN ACTIVITY.ACTIVITY_TIME  IS 'The time an activity is done.'
/

PROMPT Creating Table 'EMPLOYEE_SCHEDULE'
CREATE TABLE EMPLOYEE_SCHEDULE
(SCHEDULE_ID NUMBER(6,0) 
,SCHEDULE_NAME VARCHAR2(10) 
,DATE_SCHEDULED DATE 
,START_TIME TIME
,END_TIME TIME 
)
/

COMMENT ON TABLE EMPLOYEE_SCHEDULE IS 'Information for an employee's particular schedule.'
/

COMMENT ON COLUMN EMPLOYEE_SCHEDULE.SCHEDULE_ID IS 'The unique ID for a schedule.'
/

COMMENT ON COLUMN EMPLOYEE_SCHEDULE.SCHEDULE_NAME IS 'The name of a schedule.'
/

COMMENT ON COLUMN EMPLOYEE_SCHEDULE.DATE_SCHEDULED IS 'The date an employee is scheduled.'
/

COMMENT ON COLUMN EMPLOYEE_SCHEDULE.START_TIME IS 'The time an employee start working.'
/

COMMENT ON COLUMN EMPLOYEE_SCHEDULE.END_TIME IS 'The time an employee ends working.'
/

PROMPT Creating Table 'PARENT'
CREATE TABLE PARENT
(PARENT_ID NUMBER(8,0) 
,FIRST_NAME VARCHAR2(25)
,LAST_NAME VARCHAR2(25) 
,ADDRESS VARCHAR2(50)
,TUITION_ID NUMBER(6,0)
,CHILD_ID NUMBER(8,0)
)
/

COMMENT ON TABLE PARENT IS 'Profile information for a parent.'
/

COMMENT ON COLUMN PARENT.PARENT_ID IS 'The unique ID for a parent.'
/

COMMENT ON COLUMN PARENT.FIRST_NAME IS 'This parent''s first name.'
/

COMMENT ON COLUMN PARENT.TUITION_ID IS 'This unique ID for tuition.'
/

COMMENT ON COLUMN PARENT.LAST_NAME IS 'This parent''s last name.'
/

COMMENT ON COLUMN PARENT.ADDRESS IS 'The parent''s address.'
/

COMMENT ON COLUMN PARENT.CHILD_ID IS 'The unique ID for a daycare child.'
/

--daycare.ind

PROMPT Creating Index 'ENR_CHI_FK_I'
CREATE INDEX ENR_CHI_FK_I ON ENROLLMENT
(CHILD_ID
,ACTIVITY_ID )
/

PROMPT Creating Index 'TUI_PAR_FK_I'
CREATE INDEX TUI_PAR_FK_I ON TUITION
(PARENT_ID)
/

PROMPT Creating Index 'REP_EMP_FK_I'
CREATE INDEX REP_EMP_FK_I ON REPORT
(EMPLOYEE_ID
,CHILD_ID)
/

PROMPT Creating Index 'ACT_EMP_FK_I'
CREATE INDEX ACT_EMP_FK_I ON ACTIVITY
(EMPLOYEE_ID)
/

PROMPT Creating Index 'PAR_TUI_FK_I'
CREATE INDEX PAR_TUI_FK_I ON PARENT
(TUITION_ID
,CHILD_ID)
/

--daycare.con

PROMPT Creating Check Constraints on 'EMPLOYEE'
ALTER TABLE EMPLOYEE
MODIFY(MODIFIED_BY CONSTRAINT EMP_MODIFIED_BY_NNULL NOT NULL)
MODIFY(EMPLOYEE_ID CONSTRAINT EMP_EMPLOYEE_ID_NNULL NOT NULL)
MODIFY(WORKED_DATE CONSTRAINT EMP_WORKED_DATE_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'CHILD'
ALTER TABLE CHILD
MODIFY(MODIFIED_BY CONSTRAINT CHI_MODIFIED_BY_NNULL NOT NULL)
MODIFY(CHILD_ID CONSTRAINT CHI_CHILD_ID_NNULL NOT NULL)
/

PROMPT Creating Check Constraints on 'ENROLLMENT'
ALTER TABLE ENROLLMENT
MODIFY(MODIFIED_BY CONSTRAINT ENR_MODIFIED_BY_NNULL NOT NULL)
MODIFY(ENROLLMENT_ID CONSTRAINT ENR_ENROLLMENT_ID_NNULL NOT NULL)
MODIFY(CHILD_ID CONSTRAINT ENR_CHILD_ID_NNULL NOT NULL)
MODIFY(ACTIVITY_ID CONSTRAINT ENR_ACTIVITY_ID_NNULL NOT NULL)
MODIFY(DATE_ENROLLED CONSTRAINT ENR_DATE_ENROLLED_NNULL NOT NULL)
/

PROMPT Creating Check Constraints on 'TUITION'
ALTER TABLE TUITION 
MODIFY(MODIFIED_BY CONSTRAINT TUI_MODIFIED_BY_NNULL NOT NULL)
MODIFY(TUITION_ID CONSTRAINT TUI_TUITION_ID_NNULL NOT NULL)
MODIFY(PARENT_ID CONSTRAINT TUI_PARENT_ID_NNULL NOT NULL)
MODIFY(BILLING_DATE CONSTRAINT TUI_BILLING_DATE_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'REPORT'
ALTER TABLE REPORT
MODIFY(MODIFIED_BY CONSTRAINT REP_MODIFIED_BY_NNULL NOT NULL)
MODIFY(REPORT_ID CONSTRAINT REP_REPORT_ID_NNULL NOT NULL)
MODIFY(EMPLOYEE_ID CONSTRAINT REP_EMPLOYEE_ID_NNULL NOT NULL)
MODIFY(CHILD_ID CONSTRAINT REP_CHILD_ID_NNULL NOT NULL)
MODIFY(DATE_REPORTED CONSTRAINT REP_DATE_REPORTED_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'MEAL'
ALTER TABLE MEAL
MODIFY(MODIFIED_BY CONSTRAINT MEA_MODIFIED_BY_NNULL NOT NULL)
MODIFY(MEAL_ID CONSTRAINT MEA_MEAL_ID_NNULL NOT NULL)
MODIFY(NEAL_DATE CONSTRAINT MEA_MEAL_DATE_NNULL NOT NULL)
MODIFY(MEAL_TIME CONSTRAINT MEA_MEAL_TIME_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'ACTIVITY'
ALTER TABLE ACTIVITY 
MODIFY(MODIFIED_BY CONSTRAINT ACT_MODIFIED_BY_NNULL NOT NULL)
MODIFY(ACTIVITY_ID CONSTRAINT ACT_ACTIVITY_ID_NNULL NOT NULL)
MODIFY(EMPLOYEE_ID CONSTRAINT ACT_EMPLOYEE_ID_NNULL NOT NULL)
MODIFY(ACTIVITY_DATE CONSTRAINT ACT_ACTIVITY_DATE_NNULL NOT NULL)
MODIFY(ACTIVITY_TIME CONSTRAINT ACT_ACTIVITY_TIME_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'EMPLOYEESCHEDULE'
ALTER TABLE EMPLOYEESCHEDULE
MODIFY(MODIFIED_BY CONSTRAINT EMS_MODIFIED_BY_NNULL NOT NULL)
MODIFY(SCHEDULE_ID CONSTRAINT EMS_SCHEDULE_ID_NNULL NOT NULL)
MODIFY(DATE_SCHEDULED CONSTRAINT EMS_DATE_SCHEDULED_NNULL NOT NULL)
MODIFY(START_TIME CONSTRAINT EMS_START_TIME_NNULL NOT NULL)
MODIFY(END_TIME CONSTRAINT EMS_END_TIME_NNULL NOT NULL)
/


PROMPT Creating Check Constraints on 'PARENT'
ALTER TABLE PARENT
MODIFY(MODIFIED_BY CONSTRAINT PAR_MODIFIED_BY_NNULL NOT NULL)
MODIFY(PARENT_ID CONSTRAINT PAR_PARENT_ID_NNULL NOT NULL)
MODIFY(TUITION_ID CONSTRAINT PAR_TUITION_ID_NNULL NOT NULL)
MODIFY(CHILD_ID CONSTRAINT PAR_CHILD_ID_NNULL NOT NULL)
/



PROMPT Creating Primary Key on 'EMPLOYEE'
ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMP_PK PRIMARY KEY 
(EMPLOYEE_ID)
/

PROMPT Creating Primary Key on 'CHILD'
ALTER TABLE CHILD
ADD CONSTRAINT CHI_PK PRIMARY KEY 
(CHILD_ID)
/

PROMPT Creating Primary Key on 'ENROLLMENT'
ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENR_PK PRIMARY KEY 
(ENROLLMENT_ID
,CHILD_ID
,ACTIVITY_ID)
/

PROMPT Creating Primary Key on 'TUITION'
ALTER TABLE TUITION
ADD CONSTRAINT TUI_PK PRIMARY KEY 
(TUTION_ID
, PARENT_ID)
/

PROMPT Creating Primary Key on 'REPORT'
ALTER TABLE REPORT
ADD CONSTRAINT REP_PK PRIMARY KEY 
(REPORT_ID
,EMPLOYEE_ID
,CHILD_ID)
/

PROMPT Creating Primary Key on 'MEAL'
ALTER TABLE MEAL
ADD CONSTRAINT MEL_PK PRIMARY KEY 
(MEAL_ID)
/

PROMPT Creating Primary Key on 'ACTIVITY'
ALTER TABLE ACTIVITY
ADD CONSTRAINT ACT_PK PRIMARY KEY 
(ACTIVITY_ID
, EMPLOYEE_ID)
/

PROMPT Creating Primary Key on 'EMPLOYEESCHEDULE'
ALTER TABLE EMPLOEESCHEDULE
ADD CONSTRAINT EMS_PK PRIMARY KEY 
(SCHEDULE_ID
,SECTION_ID)
/

PROMPT Creating Primary Key on 'PARENT'
ALTER TABLE PARENT
ADD CONSTRAINT PAR_PK PRIMARY KEY 
(PARENT_ID
,TUITION_ID
,CHILD_ID )
/

PROMPT Creating Foreign Keys on 'ENROLLMENT'
ALTER TABLE ENROLLMENT ADD CONSTRAINT 
ENR_CHI_FK FOREIGN KEY 
(CHILD_ID) REFERENCES CHILD
(CHILD_ID) ADD CONSTRAINT
ENR_ACT_FK FOREIGN KEY
(ACTIVITY_ID) REFERENCES ACTIVITY
(ACTIVITY_ID)
/

PROMPT Creating Foreign Keys on 'TUITION'
ALTER TABLE TUITION ADD CONSTRAINT 
TUI_PAR_FK FOREIGN KEY 
(PARENT_ID) REFERENCES PARENT
(PARENT_ID) ADD CONSTRAINT
/

PROMPT Creating Foreign Keys on 'REPORT'
ALTER TABLE REPORT ADD CONSTRAINT 
REP_EMP_FK FOREIGN KEY 
(EMPLOYEE_ID) REFERENCES EMPLOYEE
(EMPLOYEE_ID) ADD CONSTRAINT
REP_CHI_FK FOREIGN KEY
(CHILD_ID) REFERENCES CHILD
(CHILD_ID)
/

PROMPT Creating Foreign Keys on 'ACTIVITY'
ALTER TABLE ACTIVITY ADD CONSTRAINT 
ACT_EMP_FK FOREIGN KEY 
(EMPLOYEE_ID) REFERENCES EMPLOYEE
(EMPLOYEE_ID) ADD CONSTRAINT
/

PROMPT Creating Foreign Keys on 'PARENT'
ALTER TABLE PARENT ADD CONSTRAINT 
PAR_TUI_FK FOREIGN KEY 
(TUITION_ID) REFERENCES TUITION
(TUITION_ID) ADD CONSTRAINT
PAR_CHI_FK FOREIGN KEY
(CHILD_ID) REFERENCES CHILD
(CHILD_ID) ADD CONSTRAINT
/


--PROMPT daycare.sqs
PROMPT Creating Sequence 'EMPLOYEE_ID_SEQ'
CREATE SEQUENCE EMPLOYEE_ID_SEQ
INCREMENT BY 1
START WITH 112
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
/

PROMPT Creating Sequence 'CHILD_ID_SEQ'
CREATE SEQUENCE CHILD_ID_SEQ
INCREMENT BY 1
START WITH 158
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
/

PROMPT Creating Sequence 'PARENT_ID_SEQ'
CREATE SEQUENCE PARENT_ID_SEQ
INCREMENT BY 1
START WITH 401
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
/


PROMPT Creating Sequence 'REPORT_ID_SEQ'
CREATE SEQUENCE REPORT_ID_SEQ
INCREMENT BY 1
START WITH 4
NOMAXVALUE 452
MINVALUE 1
NOCYCLE
NOCACHE
/

PROMPT Creating Sequence 'TUITION_ID_SEQ'
CREATE SEQUENCE TUITION_ID_SEQ
INCREMENT BY 1
START WITH 501
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
/

PROMPT Creating Sequence 'ENROLLEMENT_ID_SEQ'
CREATE SEQUENCE ENROLLMENT_ID_SEQ
INCREMENT BY 1
START WITH 601
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
/

--PROMPT daycare.vew 
PROMPT CREATE OR REPLACE VIEW [tuition Paid with Check] AS
SELECT  tuiton_ID, Payment_Method
FROM Tuition 
Where Payment_Method ="Check";
/
PROMPT CREATE OR REPLACE VIEW [report for child not vaccinated chicken pox] AS
SELECT Report_ID, Vaccination, child_ID
FROM REPORT
WHERE vaccination = "chicken pox"; 
/


--PROMPT daycare.trg
PROMPT CREATE OR UPDATE TRIGGER [MOST LIKED ACTIVITY] ON [ACTIVITY]
FOR INSERT, UPDATE, DELETE
FOR EACH ROW
WHEN (ACTIVITY_ID > 0)
DECLARE 
	act_num_comp number;
BEGIN 
	ACT_NUM_COMP:= :NEW.activity + :OLD.activity;
	dbms_output.put_line ('Old.activity:'|| :Old.activity);
	dbms_output.put.line ('New.activity:'|| :New.activity);
	dbms_output.put.line ('Activity total Completion number:'|| : act_num_comp);
END;
/

PROMPT CREATE OR UPDATE TRIGGER [TUITION_Changes] ON [Tuition]
FOR INSERT, UPDATE, DELETE
FOR EACH ROW
WHEN (TuitionBill > 0)
DECLARE 
	tui_diff number;
BEGIN 
	tui_diff:= :NEW.tuition - :OLD.tuition;
	dbms_output.put_line ('Old.tuition:'|| :Old.tuition);
	dbms_output.put.line ('New.tuition:'|| :New.tuition);
	dbms_output.put.line ('tuition difference:'|| : tuit_diff;
END;
/
